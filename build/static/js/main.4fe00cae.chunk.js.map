{"version":3,"sources":["services/beerApi.ts","components/Beer/index.tsx","services/foodApi.ts","components/Food/index.tsx","App.tsx","index.tsx"],"names":["beerApi","axios","create","baseURL","Beer","useState","beer","setBeer","show","setShow","useEffect","get","then","response","data","className","onClick","map","i","src","image_url","alt","name","tagline","description","foodApi","Foods","category","setCategory","categoryName","setCategoryName","meals","setMeals","categories","undefined","type","placeholder","onChange","event","target","value","strCategoryThumb","strCategory","idCategory","strMealThumb","strMeal","idMeal","App","Food","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"gNAMeA,EAJCC,IAAMC,OAAO,CACzBC,QAAS,iDCoCEC,EAnCF,WAAO,IAAD,EAEOC,qBAFP,mBAEVC,EAFU,KAEJC,EAFI,OAGOF,oBAAkB,GAHzB,mBAGVG,EAHU,KAGJC,EAHI,KAajB,OAPAC,qBAAU,WACRV,EAAQW,IAAR,IACGC,MAAK,SAAAC,GAAQ,OAAIN,EAAQM,EAASC,YAMrC,sBAAKC,UAAU,2BAAf,UAEE,kDACA,wBAAQC,QAAS,kBAAMP,GAASD,IAAhC,4BACA,qBAAKO,UAAU,aAAf,SAEEP,IAAI,OACJF,QADI,IACJA,OADI,EACJA,EAAMW,KAAI,SAACC,GAAD,OACR,sBAAKH,UAAU,OAAf,UACE,qBAAKI,IAAKD,EAAEE,UAAWC,IAAI,SAC3B,6BAAKH,EAAEI,OACP,+BAAOJ,EAAEK,UACT,gCAAQL,EAAEM,gBAJeN,EAAEI,gBCpBxBG,EAJCxB,IAAMC,OAAO,CACzBC,QAAS,4CC8DEuB,EA5DD,WAAO,IAAD,EAEcrB,qBAFd,mBAEXsB,EAFW,KAEDC,EAFC,OAGsBvB,qBAHtB,mBAGXwB,EAHW,KAGGC,EAHH,OAIQzB,qBAJR,mBAIX0B,EAJW,KAIJC,EAJI,KAyBlB,OAnBAtB,qBAAU,WACRe,EAAQd,IAAR,mBACGC,MAAK,SAAAC,GAAQ,OAAIe,EAAYf,EAASC,KAAKmB,iBAC7C,IAEHvB,qBAAU,WACRe,EAAQd,IAAR,wBAA6BkB,IAC1BjB,MAAK,SAAAC,GAAQ,OAAImB,EAASnB,EAASC,KAAKiB,YAC1C,CAACF,IAEJnB,qBAAU,gBACawB,IAAjBL,GACFJ,EAAQd,IAAR,wBAA6BkB,IAC1BjB,MAAK,SAAAC,GAAQ,OAAImB,EAASnB,EAASC,KAAKiB,YAE5C,CAACF,IAKF,sBAAKd,UAAU,2BAAf,UACE,iDACA,2FAEE,uBAAOoB,KAAK,OAAOC,YAAY,qBAAqBC,SAAU,SAACC,GAAD,OAAWR,EAAe,OAACQ,QAAD,IAACA,OAAD,EAACA,EAAOC,OAAOC,aAGzG,oCAEMb,QAFN,IAEMA,OAFN,EAEMA,EAAUV,KAAI,SAACC,GAAD,OACZ,sBAAwBH,UAAU,UAAlC,UACA,qBAAKI,IAAKD,EAAEuB,iBAAkBpB,IAAKH,EAAEwB,cACrC,oBAAI1B,QAAS,kBAAMc,EAAgBZ,EAAEwB,cAArC,SAAoDxB,EAAEwB,gBAF5CxB,EAAEyB,iBASpB,oDAAsB,iCAASd,OAC/B,qBAAKd,UAAU,iBAAf,gBAEIgB,QAFJ,IAEIA,OAFJ,EAEIA,EAAOd,KAAI,SAACC,GAAD,OACT,sBAAKH,UAAU,YAAf,UACE,qBAAKI,IAAKD,EAAE0B,aAAcvB,IAAKH,EAAE2B,UACjC,4BAAI3B,EAAE2B,YAFwB3B,EAAE4B,iBCtC/BC,MAVf,WACE,OACE,sBAAKhC,UAAU,MAAf,UACE,cAACiC,EAAD,IACA,cAAC,EAAD,QCNNC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.4fe00cae.chunk.js","sourcesContent":["import axios from 'axios'\n\nconst beerApi = axios.create({\n    baseURL: 'https://api.punkapi.com/v2/beers/?per_page=8'\n})\n\nexport default beerApi","import React, { useEffect, useState } from 'react';\nimport beerApi from '../../services/beerApi'\nimport { BeerType } from '../../types/BeerTypes';\n \nconst Beer = () => {\n\n  const [beer, setBeer] = useState<BeerType[]>()\n  const [show, setShow] = useState<Boolean>(false)\n\n\n  useEffect(() => {\n    beerApi.get(``)\n      .then(response => setBeer(response.data))\n  })\n\n\n \n  return (\n    <div className=\"food-beer-list food-shop\">\n\n      <h1>Tipos de Cerveja</h1>\n      <button onClick={() => setShow(!show)}>Buscar Cerveja</button>\n      <div className=\"beers-list\">\n      {\n        show &&\n        beer?.map((i: BeerType) => (\n          <div className=\"beer\" key={i.name}>\n            <img src={i.image_url} alt=\"Buzz\" />\n            <h3>{i.name}</h3>\n            <span>{i.tagline}</span>\n            <small>{i.description}</small>\n          </div>\n        ))\n      }\n      </div>\n    </div>\n  );\n}\n\nexport default Beer;","import axios from 'axios'\n\nconst foodApi = axios.create({\n    baseURL: 'https://www.themealdb.com/api/json/v1/1'\n})\n\nexport default foodApi","import React, {useEffect, useState} from 'react';\nimport foodApi from '../../services/foodApi'\nimport { CategoriesType, MealsType } from '../../types/FoodTypes';\n\n\nconst Foods = () => {\n\n  const [category, setCategory] = useState<CategoriesType[]>()\n  const [categoryName, setCategoryName] = useState<string>()\n  const [meals, setMeals] = useState<MealsType[]>()\n\n  useEffect(() => {\n    foodApi.get(`/categories.php`)\n      .then(response => setCategory(response.data.categories))\n  }, [])\n\n  useEffect(() => {\n    foodApi.get(`/filter.php?c=${categoryName}`)\n      .then(response => setMeals(response.data.meals))\n  }, [categoryName])\n\n  useEffect(() => {\n    if (categoryName !== undefined) {\n      foodApi.get(`/search.php?s=${categoryName}`)\n        .then(response => setMeals(response.data.meals))\n    }\n  }, [categoryName])\n\n\n\n  return (\n    <div className=\"food-beer-list food-shop\">\n      <h1>Tipos de pratos</h1>\n      <p>\n        Selecione uma categoria ou digite a comida (em inglÃªs):\n        <input type=\"text\" placeholder=\"Digite a comida...\" onChange={(event) => setCategoryName(event?.target.value)}/>\n      </p>\n\n      <ul>\n          {\n            category?.map((i: CategoriesType) => (\n              <div key={i.idCategory} className=\"catalog\">\n              <img src={i.strCategoryThumb} alt={i.strCategory}/>\n              <li onClick={() => setCategoryName(i.strCategory)}>{i.strCategory}</li>\n              </div>\n            ))\n          }\n      </ul>\n\n\n      <h2>Tipo selecionado: <strong>{categoryName}</strong></h2>\n      <div className=\"food-container\">\n        {\n          meals?.map((i: MealsType) =>(\n            <div className=\"food-item\" key={i.idMeal}>\n              <img src={i.strMealThumb} alt={i.strMeal}/>\n              <p>{i.strMeal}</p>\n            </div>\n          ))\n        }\n      </div>\n    </div>\n  );\n}\n\nexport default Foods;","import React from 'react';\nimport './App.css';\n\nimport Beer from './components/Beer'\nimport Food from './components/Food'\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Food />\n      <Beer />\n    </div>\n  );\n}\n\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);"],"sourceRoot":""}